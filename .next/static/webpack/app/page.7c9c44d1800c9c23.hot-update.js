"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/store/excuse-store.ts":
/*!***********************************!*\
  !*** ./src/store/excuse-store.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useExcuseStore: () => (/* binding */ useExcuseStore)\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/react.mjs\");\n/* harmony import */ var _lib_constants_excuses__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/constants/excuses */ \"(app-pages-browser)/./src/lib/constants/excuses.ts\");\n\n\nconst getRandomElement = (array)=>{\n    return array[Math.floor(Math.random() * array.length)];\n};\nconst getDayOfWeek = ()=>{\n    return new Date().toLocaleDateString('en-US', {\n        weekday: 'long'\n    }).toLowerCase();\n};\nconst getTimeOfDay = ()=>{\n    const hour = new Date().getHours();\n    if (hour < 12) return 'morning';\n    if (hour < 17) return 'afternoon';\n    return 'evening';\n};\nconst useExcuseStore = (0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)((set, get)=>({\n        history: {\n            excuses: [],\n            lastUsed: {\n                classic: null,\n                'sci-fi': null,\n                corporate: null,\n                supernatural: null,\n                environmental: null,\n                social: null\n            }\n        },\n        currentExcuse: null,\n        generateExcuse: (category)=>{\n            const selectedCategory = category || getRandomElement(Object.keys(_lib_constants_excuses__WEBPACK_IMPORTED_MODULE_0__.EXCUSE_TEMPLATES));\n            const template = getRandomElement(_lib_constants_excuses__WEBPACK_IMPORTED_MODULE_0__.EXCUSE_TEMPLATES[selectedCategory]);\n            // TODO: Implement variable replacement logic\n            const generatedExcuse = {\n                id: crypto.randomUUID(),\n                text: template.template,\n                category: selectedCategory,\n                timestamp: new Date(),\n                believabilityScore: template.believabilityScore,\n                context: {\n                    timeOfDay: getTimeOfDay(),\n                    dayOfWeek: getDayOfWeek()\n                }\n            };\n            set((state)=>({\n                    currentExcuse: generatedExcuse,\n                    history: {\n                        excuses: [\n                            generatedExcuse,\n                            ...state.history.excuses\n                        ],\n                        lastUsed: {\n                            ...state.history.lastUsed,\n                            [selectedCategory]: new Date()\n                        }\n                    }\n                }));\n            return generatedExcuse;\n        },\n        clearHistory: ()=>{\n            set((state)=>({\n                    history: {\n                        excuses: [],\n                        lastUsed: Object.fromEntries(Object.keys(state.history.lastUsed).map((key)=>[\n                                key,\n                                null\n                            ]))\n                    }\n                }));\n        },\n        removeExcuse: (id)=>{\n            set((state)=>({\n                    history: {\n                        ...state.history,\n                        excuses: state.history.excuses.filter((excuse)=>excuse.id !== id)\n                    }\n                }));\n        }\n    }));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zdG9yZS9leGN1c2Utc3RvcmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlDO0FBRTJCO0FBVTVELE1BQU1FLG1CQUFtQixDQUFJQztJQUMzQixPQUFPQSxLQUFLLENBQUNDLEtBQUtDLEtBQUssQ0FBQ0QsS0FBS0UsTUFBTSxLQUFLSCxNQUFNSSxNQUFNLEVBQUU7QUFDeEQ7QUFFQSxNQUFNQyxlQUFlO0lBQ25CLE9BQU8sSUFBSUMsT0FBT0Msa0JBQWtCLENBQUMsU0FBUztRQUFFQyxTQUFTO0lBQU8sR0FBR0MsV0FBVztBQUNoRjtBQUVBLE1BQU1DLGVBQWU7SUFDbkIsTUFBTUMsT0FBTyxJQUFJTCxPQUFPTSxRQUFRO0lBQ2hDLElBQUlELE9BQU8sSUFBSSxPQUFPO0lBQ3RCLElBQUlBLE9BQU8sSUFBSSxPQUFPO0lBQ3RCLE9BQU87QUFDVDtBQUVPLE1BQU1FLGlCQUFpQmhCLCtDQUFNQSxDQUFjLENBQUNpQixLQUFLQyxNQUFTO1FBQy9EQyxTQUFTO1lBQ1BDLFNBQVMsRUFBRTtZQUNYQyxVQUFVO2dCQUNSQyxTQUFTO2dCQUNULFVBQVU7Z0JBQ1ZDLFdBQVc7Z0JBQ1hDLGNBQWM7Z0JBQ2RDLGVBQWU7Z0JBQ2ZDLFFBQVE7WUFDVjtRQUNGO1FBQ0FDLGVBQWU7UUFFZkMsZ0JBQWdCLENBQUNDO1lBQ2YsTUFBTUMsbUJBQW1CRCxZQUFZM0IsaUJBQWlCNkIsT0FBT0MsSUFBSSxDQUFDL0Isb0VBQWdCQTtZQUNsRixNQUFNZ0MsV0FBVy9CLGlCQUFpQkQsb0VBQWdCLENBQUM2QixpQkFBaUI7WUFFcEUsNkNBQTZDO1lBQzdDLE1BQU1JLGtCQUFtQztnQkFDdkNDLElBQUlDLE9BQU9DLFVBQVU7Z0JBQ3JCQyxNQUFNTCxTQUFTQSxRQUFRO2dCQUN2QkosVUFBVUM7Z0JBQ1ZTLFdBQVcsSUFBSTlCO2dCQUNmK0Isb0JBQW9CUCxTQUFTTyxrQkFBa0I7Z0JBQy9DQyxTQUFTO29CQUNQQyxXQUFXN0I7b0JBQ1g4QixXQUFXbkM7Z0JBQ2I7WUFDRjtZQUVBUyxJQUFJLENBQUMyQixRQUFXO29CQUNkakIsZUFBZU87b0JBQ2ZmLFNBQVM7d0JBQ1BDLFNBQVM7NEJBQUNjOytCQUFvQlUsTUFBTXpCLE9BQU8sQ0FBQ0MsT0FBTzt5QkFBQzt3QkFDcERDLFVBQVU7NEJBQ1IsR0FBR3VCLE1BQU16QixPQUFPLENBQUNFLFFBQVE7NEJBQ3pCLENBQUNTLGlCQUFpQixFQUFFLElBQUlyQjt3QkFDMUI7b0JBQ0Y7Z0JBQ0Y7WUFFQSxPQUFPeUI7UUFDVDtRQUVBVyxjQUFjO1lBQ1o1QixJQUFJLENBQUMyQixRQUFXO29CQUNkekIsU0FBUzt3QkFDUEMsU0FBUyxFQUFFO3dCQUNYQyxVQUFVVSxPQUFPZSxXQUFXLENBQzFCZixPQUFPQyxJQUFJLENBQUNZLE1BQU16QixPQUFPLENBQUNFLFFBQVEsRUFBRTBCLEdBQUcsQ0FBQ0MsQ0FBQUEsTUFBTztnQ0FBQ0E7Z0NBQUs7NkJBQUs7b0JBRTlEO2dCQUNGO1FBQ0Y7UUFFQUMsY0FBYyxDQUFDZDtZQUNibEIsSUFBSSxDQUFDMkIsUUFBVztvQkFDZHpCLFNBQVM7d0JBQ1AsR0FBR3lCLE1BQU16QixPQUFPO3dCQUNoQkMsU0FBU3dCLE1BQU16QixPQUFPLENBQUNDLE9BQU8sQ0FBQzhCLE1BQU0sQ0FBQ0MsQ0FBQUEsU0FBVUEsT0FBT2hCLEVBQUUsS0FBS0E7b0JBQ2hFO2dCQUNGO1FBQ0Y7SUFDRixJQUFJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9zdG9yZS9leGN1c2Utc3RvcmUudHM/YzUxNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGUgfSBmcm9tICd6dXN0YW5kJztcbmltcG9ydCB7IEV4Y3VzZUNhdGVnb3J5LCBHZW5lcmF0ZWRFeGN1c2UsIEV4Y3VzZUhpc3RvcnkgfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQgeyBFWENVU0VfVEVNUExBVEVTIH0gZnJvbSAnLi4vbGliL2NvbnN0YW50cy9leGN1c2VzJztcblxuaW50ZXJmYWNlIEV4Y3VzZVN0b3JlIHtcbiAgaGlzdG9yeTogRXhjdXNlSGlzdG9yeTtcbiAgY3VycmVudEV4Y3VzZTogR2VuZXJhdGVkRXhjdXNlIHwgbnVsbDtcbiAgZ2VuZXJhdGVFeGN1c2U6IChjYXRlZ29yeT86IEV4Y3VzZUNhdGVnb3J5KSA9PiBHZW5lcmF0ZWRFeGN1c2U7XG4gIGNsZWFySGlzdG9yeTogKCkgPT4gdm9pZDtcbiAgcmVtb3ZlRXhjdXNlOiAoaWQ6IHN0cmluZykgPT4gdm9pZDtcbn1cblxuY29uc3QgZ2V0UmFuZG9tRWxlbWVudCA9IDxUPihhcnJheTogVFtdKTogVCA9PiB7XG4gIHJldHVybiBhcnJheVtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBhcnJheS5sZW5ndGgpXTtcbn07XG5cbmNvbnN0IGdldERheU9mV2VlayA9ICgpOiBzdHJpbmcgPT4ge1xuICByZXR1cm4gbmV3IERhdGUoKS50b0xvY2FsZURhdGVTdHJpbmcoJ2VuLVVTJywgeyB3ZWVrZGF5OiAnbG9uZycgfSkudG9Mb3dlckNhc2UoKTtcbn07XG5cbmNvbnN0IGdldFRpbWVPZkRheSA9ICgpOiBzdHJpbmcgPT4ge1xuICBjb25zdCBob3VyID0gbmV3IERhdGUoKS5nZXRIb3VycygpO1xuICBpZiAoaG91ciA8IDEyKSByZXR1cm4gJ21vcm5pbmcnO1xuICBpZiAoaG91ciA8IDE3KSByZXR1cm4gJ2FmdGVybm9vbic7XG4gIHJldHVybiAnZXZlbmluZyc7XG59O1xuXG5leHBvcnQgY29uc3QgdXNlRXhjdXNlU3RvcmUgPSBjcmVhdGU8RXhjdXNlU3RvcmU+KChzZXQsIGdldCkgPT4gKHtcbiAgaGlzdG9yeToge1xuICAgIGV4Y3VzZXM6IFtdLFxuICAgIGxhc3RVc2VkOiB7XG4gICAgICBjbGFzc2ljOiBudWxsLFxuICAgICAgJ3NjaS1maSc6IG51bGwsXG4gICAgICBjb3Jwb3JhdGU6IG51bGwsXG4gICAgICBzdXBlcm5hdHVyYWw6IG51bGwsXG4gICAgICBlbnZpcm9ubWVudGFsOiBudWxsLFxuICAgICAgc29jaWFsOiBudWxsLFxuICAgIH0sXG4gIH0sXG4gIGN1cnJlbnRFeGN1c2U6IG51bGwsXG5cbiAgZ2VuZXJhdGVFeGN1c2U6IChjYXRlZ29yeT86IEV4Y3VzZUNhdGVnb3J5KSA9PiB7XG4gICAgY29uc3Qgc2VsZWN0ZWRDYXRlZ29yeSA9IGNhdGVnb3J5IHx8IGdldFJhbmRvbUVsZW1lbnQoT2JqZWN0LmtleXMoRVhDVVNFX1RFTVBMQVRFUykgYXMgRXhjdXNlQ2F0ZWdvcnlbXSk7XG4gICAgY29uc3QgdGVtcGxhdGUgPSBnZXRSYW5kb21FbGVtZW50KEVYQ1VTRV9URU1QTEFURVNbc2VsZWN0ZWRDYXRlZ29yeV0pO1xuICAgIFxuICAgIC8vIFRPRE86IEltcGxlbWVudCB2YXJpYWJsZSByZXBsYWNlbWVudCBsb2dpY1xuICAgIGNvbnN0IGdlbmVyYXRlZEV4Y3VzZTogR2VuZXJhdGVkRXhjdXNlID0ge1xuICAgICAgaWQ6IGNyeXB0by5yYW5kb21VVUlEKCksXG4gICAgICB0ZXh0OiB0ZW1wbGF0ZS50ZW1wbGF0ZSwgLy8gV2lsbCBiZSByZXBsYWNlZCB3aXRoIGFjdHVhbCB2YXJpYWJsZSBzdWJzdGl0dXRpb25cbiAgICAgIGNhdGVnb3J5OiBzZWxlY3RlZENhdGVnb3J5LFxuICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLFxuICAgICAgYmVsaWV2YWJpbGl0eVNjb3JlOiB0ZW1wbGF0ZS5iZWxpZXZhYmlsaXR5U2NvcmUsXG4gICAgICBjb250ZXh0OiB7XG4gICAgICAgIHRpbWVPZkRheTogZ2V0VGltZU9mRGF5KCksXG4gICAgICAgIGRheU9mV2VlazogZ2V0RGF5T2ZXZWVrKCkgYXMgYW55LFxuICAgICAgfSxcbiAgICB9O1xuXG4gICAgc2V0KChzdGF0ZSkgPT4gKHtcbiAgICAgIGN1cnJlbnRFeGN1c2U6IGdlbmVyYXRlZEV4Y3VzZSxcbiAgICAgIGhpc3Rvcnk6IHtcbiAgICAgICAgZXhjdXNlczogW2dlbmVyYXRlZEV4Y3VzZSwgLi4uc3RhdGUuaGlzdG9yeS5leGN1c2VzXSxcbiAgICAgICAgbGFzdFVzZWQ6IHtcbiAgICAgICAgICAuLi5zdGF0ZS5oaXN0b3J5Lmxhc3RVc2VkLFxuICAgICAgICAgIFtzZWxlY3RlZENhdGVnb3J5XTogbmV3IERhdGUoKSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSkpO1xuXG4gICAgcmV0dXJuIGdlbmVyYXRlZEV4Y3VzZTtcbiAgfSxcblxuICBjbGVhckhpc3Rvcnk6ICgpID0+IHtcbiAgICBzZXQoKHN0YXRlKSA9PiAoe1xuICAgICAgaGlzdG9yeToge1xuICAgICAgICBleGN1c2VzOiBbXSxcbiAgICAgICAgbGFzdFVzZWQ6IE9iamVjdC5mcm9tRW50cmllcyhcbiAgICAgICAgICBPYmplY3Qua2V5cyhzdGF0ZS5oaXN0b3J5Lmxhc3RVc2VkKS5tYXAoa2V5ID0+IFtrZXksIG51bGxdKVxuICAgICAgICApIGFzIFJlY29yZDxFeGN1c2VDYXRlZ29yeSwgbnVsbD4sXG4gICAgICB9LFxuICAgIH0pKTtcbiAgfSxcblxuICByZW1vdmVFeGN1c2U6IChpZDogc3RyaW5nKSA9PiB7XG4gICAgc2V0KChzdGF0ZSkgPT4gKHtcbiAgICAgIGhpc3Rvcnk6IHtcbiAgICAgICAgLi4uc3RhdGUuaGlzdG9yeSxcbiAgICAgICAgZXhjdXNlczogc3RhdGUuaGlzdG9yeS5leGN1c2VzLmZpbHRlcihleGN1c2UgPT4gZXhjdXNlLmlkICE9PSBpZCksXG4gICAgICB9LFxuICAgIH0pKTtcbiAgfSxcbn0pKTtcbiJdLCJuYW1lcyI6WyJjcmVhdGUiLCJFWENVU0VfVEVNUExBVEVTIiwiZ2V0UmFuZG9tRWxlbWVudCIsImFycmF5IiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwibGVuZ3RoIiwiZ2V0RGF5T2ZXZWVrIiwiRGF0ZSIsInRvTG9jYWxlRGF0ZVN0cmluZyIsIndlZWtkYXkiLCJ0b0xvd2VyQ2FzZSIsImdldFRpbWVPZkRheSIsImhvdXIiLCJnZXRIb3VycyIsInVzZUV4Y3VzZVN0b3JlIiwic2V0IiwiZ2V0IiwiaGlzdG9yeSIsImV4Y3VzZXMiLCJsYXN0VXNlZCIsImNsYXNzaWMiLCJjb3Jwb3JhdGUiLCJzdXBlcm5hdHVyYWwiLCJlbnZpcm9ubWVudGFsIiwic29jaWFsIiwiY3VycmVudEV4Y3VzZSIsImdlbmVyYXRlRXhjdXNlIiwiY2F0ZWdvcnkiLCJzZWxlY3RlZENhdGVnb3J5IiwiT2JqZWN0Iiwia2V5cyIsInRlbXBsYXRlIiwiZ2VuZXJhdGVkRXhjdXNlIiwiaWQiLCJjcnlwdG8iLCJyYW5kb21VVUlEIiwidGV4dCIsInRpbWVzdGFtcCIsImJlbGlldmFiaWxpdHlTY29yZSIsImNvbnRleHQiLCJ0aW1lT2ZEYXkiLCJkYXlPZldlZWsiLCJzdGF0ZSIsImNsZWFySGlzdG9yeSIsImZyb21FbnRyaWVzIiwibWFwIiwia2V5IiwicmVtb3ZlRXhjdXNlIiwiZmlsdGVyIiwiZXhjdXNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/store/excuse-store.ts\n"));

/***/ })

});